version: 1
send_anonymous_usage_stats: true
project_id: "tap-polygon"

default_environment: dev

state_backend:
  uri: file://$MELTANO_PROJECT_ROOT/state.json

environments:
  - name: dev
    config:
      plugins:
        loaders:
          - name: target-postgres
            config:
              schema: tap_polygon_dev
  - name: production
    config:
      plugins:
        loaders:
          - name: target-postgres
            config:
              default_target_schema: tap_polygon_production
plugins:
  extractors:
  - name: "tap-polygon"
    namespace: "tap_polygon"
    pip_url: git+https://github.com/melgazar9/tap-polygon.git

    capabilities:
    - state
    - catalog
    - discover
    - about
    - stream-maps

    settings:
    - name: api_key
      kind: password
      label: Polygon API Key
      description: Polygon.io API Key
      sensitive: true

    - name: start_date
      kind: date_iso8601
      label: Start Date
      description: Initial date to start extracting data from

    select:
      - stock_tickers.*
      - ticker_details.*
      - ticker_types.*
      - related_companies.*
      - custom_bars.*
      - daily_market_summary.*
      - daily_ticker_summary.*
      - previous_day_bar.*
      - top_market_movers.*
      - trades.*
      - quotes.*
      - sma.*
      - ema.*
      - macd.*
      - rsi.*
      - exchanges.*
      - market_holidays.*
      - market_status.*
      - condition_codes.*
      - ipos.*
      - splits.*
      - dividends.*
      - ticker_events.*
      - financials.*
      - short_interest.*
      - short_volume.*
      - news.*


    config:
      start_date: '2020-01-01T00:00:00Z'
      rest_api_key: ${POLYGON_REST_API_KEY}
      base_url: https://api.polygon.io

      # The tickers that are set here persist across all streams that require a single stock ticker as input.
      # To run different tickers across different streams you need to call the tap N times,
      # where N is the number of distinct groups of ticker.
      stock_tickers:
        query_params:
          sort: ticker
          limit: 1000
        tickers:
          - AAPL
          - META
      ticker_details:
        other_params:
          loop_over_dates_gte_date: true
      custom_bars:
        - path_params:
            multiplier: 1
            timespan: "second"
        - query_params:
            adjusted: false
            sort: "asc"
            limit: 50000
      daily_market_summary:
        - query_params:
            adjusted: true
            include_otc: true
        - other_params:
            loop_over_dates_gte_date: true
      daily_ticker_summary:
        - other_params:
            loop_over_dates_gte_date: true
      previous_day_bar:
        - other_params:
            loop_over_dates_gte_date: true
      top_market_movers:
        - query_params:
            direction: "gainers"  # set to "" or "both" to get both directions
            include_otc: false
      trades:
        - query_params:
            sort: timestamp
            order: asc
            limit: 50000
      quotes:
        - query_params:
            sort: timestamp
            order: asc
            limit: 50000
      sma:
        - query_params:
            order: asc
            timespan: hour
            window: 10
            series_type: close
            expand_underlying: true
            limit: 5000
      ema:
        - query_params:
            order: asc
            timespan: hour
            window: 10
            series_type: close
            expand_underlying: true
            limit: 5000
      macd:
        - query_params:
            order: asc
            timespan: hour
            short_window: 12
            long_window: 26
            signal_window: 10
            series_type: close
            expand_underlying: true
            limit: 5000
      rsi:
        - query_params:
            order: asc
            timespan: hour
            window: 18
            series_type: close
            expand_underlying: true
            limit: 5000
      ipos:
        - query_params:
            limit: 1000
      splits:
        - query_params:
            limit: 1000
            order: asc
      dividends:
        - query_params:
            order: asc
            limit: 1000
      financials:
        - query_params:
            order: asc
            limit: 100
      short_interest:
        - query_params:
            limit: 50000
      short_volume:
        - query_params:
            order: asc
            limit: 50000
      news:
        - query_params:
            published_utc.gte: "2015-05-25"
            limit: 1000
            order: asc


  loaders:
    - name: target-jsonl
      variant: andyh1203
      pip_url: target-jsonl

    - name: target-postgres
      variant: meltanolabs
      pip_url: git+https://github.com/MeltanoLabs/target-postgres
      config:
        host: ${POSTGRES_HOST}
        port: ${POSTGRES_PORT}
        user: ${POSTGRES_USER}
        password: ${POSTGRES_PASSWORD}
        dialect: ${POSTGRES_DIALECT}
        database: financial_elt
        schema: tap_polygon
        use_copy: true  # Faster bulk loading
        add_record_metadata: true

    - name: target-parquet
      variant: automattic
      pip_url: git+https://github.com/Automattic/target-parquet.git
      config:
        destination_path: output/parquets
        compression_method: zstd
        max_pyarrow_table_size: 5500
        max_batch_size: 100000
